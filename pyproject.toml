[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "ipmi-fan-control"
version = "0.1.1"
description = "A tool to manage fan speeds using IPMI"
readme = "README.md"
requires-python = ">=3.8"
license = { text = "MIT" }
dependencies = [
    "typer>=0.9.0",
    "rich>=13.4.2",
    "python-ipmi>=0.5.0",
    "types-setuptools",
    "PyYAML>=6.0",
]

[project.scripts]
ipmi-fan = "ipmi_fan_control.cli:app"

[tool.hatch.build.targets.wheel]
packages = ["ipmi_fan_control"]

[tool.hatch.envs.dev]
dependencies = [
    "pytest>=7.0.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.10.0",
    "ruff>=0.3.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.10.0",
    "ruff>=0.3.0",
]

[tool.ruff]
# Same as Black
line-length = 88

# Assume Python 3.8
target-version = "py38"

# Exclude a variety of commonly ignored directories
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

[tool.ruff.lint]
# Enable pycodestyle (E), pyflakes (F), isort (I), pylint (PL)
select = ["E", "F", "I", "PL"]
ignore = [
    "PLR0913",  # Too many arguments
    "PLR0912",  # Too many branches  
    "PLR0915",  # Too many statements
    "PLR2004",  # Magic value comparisons
    "PLW0602",  # Global variable usage
    "PLW0603",  # Global statement usage
    "E501",     # Line too long (handled by formatter)
]

# Allow autofix for all enabled rules that support it
fixable = ["A", "B", "C", "D", "E", "F", "I"]
unfixable = []

# Allow unused variables when underscore-prefixed
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.mccabe]
# Unlike Flake8, default to a complexity level of 10
max-complexity = 15

[tool.ruff.lint.isort]
known-third-party = ["pyipmi", "typer", "rich"]

[tool.ruff.lint.pylint]
max-args = 10