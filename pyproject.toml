[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "ipmi-fan-control"
version = "0.1.0"
description = "A tool to manage fan speeds using IPMI"
readme = "README.md"
requires-python = ">=3.8"
license = { text = "MIT" }
dependencies = [
    "typer>=0.9.0",
    "rich>=13.4.2",
    "python-ipmi>=0.5.0",
    "types-setuptools",
    "PyYAML>=6.0",
]

[project.scripts]
ipmi-fan = "ipmi_fan_control.cli:app"

[tool.hatch.build.targets.wheel]
packages = ["ipmi_fan_control"]

[tool.hatch.envs.dev]
dependencies = [
    "pytest>=7.0.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.10.0",
    "ruff>=0.3.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.10.0",
    "ruff>=0.3.0",
]

[tool.ruff]
# Enable pycodestyle (E), pyflakes (F), isort (I), pylint (PL)
select = ["E", "F", "I", "PL"]
ignore = []

# Allow autofix for all enabled rules that support it
fixable = ["A", "B", "C", "D", "E", "F", "I"]
unfixable = []

# Exclude a variety of commonly ignored directories
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

# Same as Black
line-length = 88

# Allow unused variables when underscore-prefixed
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

# Assume Python 3.8
target-version = "py38"

[tool.ruff.mccabe]
# Unlike Flake8, default to a complexity level of 10
max-complexity = 12

[tool.ruff.isort]
known-third-party = ["pyipmi", "typer", "rich"]

[tool.ruff.pylint]
max-args = 8